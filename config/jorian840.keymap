/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define MY_COMBO_TIME 100

/ {
    macros {
        macro_HASH: macro_HASH {
            label = "macro_HASH";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time 1>
                , <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N3 &kp KP_N5>
                , <&macro_release &kp LALT>
                ;
        };
        macro_DOLLAR: macro_DOLLAR {
            label = "macro_DOLLAR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time 1>
                , <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N3 &kp KP_N6>
                , <&macro_release &kp LALT>
                ;
        };
        macro_CARET: macro_CARET {
            label = "macro_CARET";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time 1>
                , <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N9 &kp KP_N4>
                , <&macro_release &kp LALT>
                ;
        };
        macro_PIPE: macro_PIPE {
            label = "macro_PIPE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time 1>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                , <&macro_tap &kp LS(NON_US_BSLH)>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                ;
        };
        macro_LT: macro_LT {
            label = "macro_LT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time 1>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                , <&macro_tap &kp LS(COMMA)>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                ;
        };
        macro_GT: macro_GT {
            label = "macro_GT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time 1>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                , <&macro_tap &kp LS(DOT)>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                ;
        };
        macro_LBKT: macro_LBKT {
            label = "macro_LBKT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time 1>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                , <&macro_tap &kp LBKT>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                ;
        };
        macro_RBKT: macro_RBKT {
            label = "macro_RBKT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time 1>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                , <&macro_tap &kp RBKT>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                ;
        };
        macro_AMPS: macro_AMPS {
            label = "macro_AMPS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time 1>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                , <&macro_tap &kp LS(N7)>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                ;
        };
        macro_AT: macro_AT {
            label = "macro_AT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time 1>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                , <&macro_tap &kp LS(N2)>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                ;
        };
        macro_ENG: macro_ENG {
            label = "macro_ENG";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time 1>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                , <&macro_tap &to LWR>
                ;
        };
        macro_RU: macro_RU {
            label = "macro_RU";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time 1>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                , <&macro_tap &to DEF>
                ;
        };
    };
};

/ {
    behaviors {
        eng_dot_comma: eng_dot_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "ENG_DOT_COMMA";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COMMA>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        eng_dqt: eng_dqt {
            compatible = "zmk,behavior-mod-morph";
            label = "ENG_DQT";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp LS(SQT)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ru_hash: ru_hash {
            compatible = "zmk,behavior-mod-morph";
            label = "RU_HASH";
            #binding-cells = <0>;
            bindings = <&kp N3>, <&macro_HASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ru_semi_colon: ru_semi_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "RU_SEMI_COLON";
            #binding-cells = <0>;
            bindings = <&kp LS(N4)>, <&kp LS(N6)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ru_slash: ru_slash {
            compatible = "zmk,behavior-mod-morph";
            label = "RU_SLASH";
            #binding-cells = <0>;
            bindings = <&kp LS(BSLH)>, <&kp BSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        eng_slash: eng_slash {
            compatible = "zmk,behavior-mod-morph";
            label = "ENG_SLASH";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ru_dollar: ru_dollar {
            compatible = "zmk,behavior-mod-morph";
            label = "RU_DOLLAR";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&macro_DOLLAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ru_caret: ru_caret {
            compatible = "zmk,behavior-mod-morph";
            label = "RU_CARET";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&macro_CARET>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        eng_qmark: eng_qmark {
            compatible = "zmk,behavior-mod-morph";
            label = "ENG_QMARK";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp LS(SLASH)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_RU_ENG {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <30 38>;
            bindings = <&macro_ENG>;
            layers = <DEF>;
        };
        combo_ENG_ENG {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <30 38>;
            bindings = <&none>;
            layers = <LWR>;
        };
        combo_ENG_RU {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <29 38>;
            bindings = <&macro_RU>;
            layers = <LWR>;
        };
        combo_RU_RU {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <29 38>;
            bindings = <&none>;
            layers = <DEF>;
        };
        combo_A {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <17 18>;
            bindings = <&kp F>;
            layers = <DEF>;
        };
        combo_ENG_A {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <17 18>;
            bindings = <&kp A>;
            layers = <LWR>;
        };
        combo_E {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <16 18>;
            bindings = <&kp T>;
            layers = <DEF>;
        };
         combo_ENG_E {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <16 18>;
            bindings = <&kp E>;
            layers = <LWR>;
        };
        combo_I {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <15 18>;
            bindings = <&kp B>;
            layers = <DEF>;
        };
        combo_ENG_I {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <15 18>;
            bindings = <&kp I>;
            layers = <LWR>;
        };
        combo_O {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <16 17>;
            bindings = <&kp J>;
            layers = <DEF>;
        };
        combo_ENG_O {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <16 17>;
            bindings = <&kp O>;
            layers = <LWR>;
        };
        combo_Y {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <15 17>;
            bindings = <&kp S>;
            layers = <DEF>;
        };
        combo_ENG_Y {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <15 17>;
            bindings = <&kp Y>;
            layers = <LWR>;
        };
        combo_U {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <15 16>;
            bindings = <&kp E>;
            layers = <DEF>;
        };
        combo_ENG_U {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <15 16>;
            bindings = <&kp U>;
            layers = <LWR>;
        };
        combo_EE {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <17 19>;
            bindings = <&kp SQT>;
            layers = <DEF>;
        };
        combo_ENG_EE {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <17 19>;
            bindings = <&kp E>;
            layers = <LWR>;
        };
        combo_YU {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <16 19>;
            bindings = <&kp DOT>;
            layers = <DEF>;
        };
        combo_ENG_YU {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <16 19>;
            bindings = <&kp U>;
            layers = <LWR>;
        };
        combo_YA {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <15 19>;
            bindings = <&kp Z>;
            layers = <DEF>;
        };
        combo_ENG_YA {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <15 19>;
            bindings = <&kp Q>;
            layers = <LWR>;
        };
        combo_YO {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <16 17 18>;
            bindings = <&kp GRAVE>;
            layers = <DEF>;
        };
        combo_ENG_YO {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <16 17 18>;
            bindings = <&none>;
            layers = <LWR>;
        };
        combo_P {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <4 5>;
            bindings = <&kp G>;
            layers = <DEF>;
        };
        combo_ENG_P {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <4 5>;
            bindings = <&kp P>;
            layers = <LWR>;
        };
        combo_B {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <29 30>;
            bindings = <&kp COMMA>;
            layers = <DEF>;
        };
        combo_ENG_B {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <29 30>;
            bindings = <&kp B>;
            layers = <LWR>;
        };
        combo_F {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <3 5>;
            bindings = <&kp A>;
            layers = <DEF>;
        };
        combo_ENG_F {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <3 5>;
            bindings = <&kp F>;
            layers = <LWR>;
        };
        combo_V {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <28 30>;
            bindings = <&kp D>;
            layers = <DEF>;
        };
        combo_ENG_V {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <28 30>;
            bindings = <&kp V>;
            layers = <LWR>;
        };
        combo_K {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <2 5>;
            bindings = <&kp R>;
            layers = <DEF>;
        };
        combo_ENG_K {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <2 5>;
            bindings = <&kp K>;
            layers = <LWR>;
        };
        combo_G {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <27 30>;
            bindings = <&kp U>;
            layers = <DEF>;
        };
        combo_ENG_G {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <27 30>;
            bindings = <&kp G>;
            layers = <LWR>;
        };
        combo_T {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <3 4>;
            bindings = <&kp N>;
            layers = <DEF>;
        };
        combo_ENG_T {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <3 4>;
            bindings = <&kp T>;
            layers = <LWR>;
        };
        combo_D {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <28 29>;
            bindings = <&kp L>;
            layers = <DEF>;
        };
        combo_ENG_D {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <28 29>;
            bindings = <&kp D>;
            layers = <LWR>;
        };
        combo_SH {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <2 4>;
            bindings = <&kp I>;
            layers = <DEF>;
        };
        combo_ENG_SH {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <2 4>;
            bindings = <&kp W>;
            layers = <LWR>;
        };
        combo_ZH {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <27 29>;
            bindings = <&kp SEMI>;
            layers = <DEF>;
        };
        combo_ENG_ZH {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <27 29>;
            bindings = <&kp Z>;
            layers = <LWR>;
        };
        combo_S {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <2 3>;
            bindings = <&kp C>;
            layers = <DEF>;
        };
        combo_ENG_S {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <2 3>;
            bindings = <&kp S>;
            layers = <LWR>;
        };
        combo_Z {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <27 28>;
            bindings = <&kp P>;
            layers = <DEF>;
        };
        combo_ENG_Z {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <27 28>;
            bindings = <&kp Z>;
            layers = <LWR>;
        };
        combo_YI {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <4 18>;
            bindings = <&kp Q>;
            layers = <DEF>;
        };
        combo_ENG_YI {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <4 18>;
            bindings = <&kp J>;
            layers = <LWR>;
        };
        combo_L {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <3 18>;
            bindings = <&kp K>;
            layers = <DEF>;
        };
        combo_ENG_L {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <3 18>;
            bindings = <&kp L>;
            layers = <LWR>;
        };
        combo_M {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <2 18>;
            bindings = <&kp V>;
            layers = <DEF>;
        };
        combo_ENG_M {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <2 18>;
            bindings = <&kp M>;
            layers = <LWR>;
        };
        combo_N {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <17 5>;
            bindings = <&kp Y>;
            layers = <DEF>;
        };
        combo_ENG_N {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <17 5>;
            bindings = <&kp N>;
            layers = <LWR>;
        };
        combo_R {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <3 17>;
            bindings = <&kp H>;
            layers = <DEF>;
        };
        combo_ENG_R {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <3 17>;
            bindings = <&kp R>;
            layers = <LWR>;
        };
        combo_H {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <2 17>;
            bindings = <&kp LBKT>;
            layers = <DEF>;
        };
        combo_ENG_H {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <2 17>;
            bindings = <&kp H>;
            layers = <LWR>;
        };
        combo_C {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <16 5>;
            bindings = <&kp W>;
            layers = <DEF>;
        };
        combo_ENG_C {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <16 5>;
            bindings = <&kp C>;
            layers = <LWR>;
        };
        combo_CH {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <16 4>;
            bindings = <&kp X>;
            layers = <DEF>;
        };
        combo_ENG_CH {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <16 4>;
            bindings = <&kp X>;
            layers = <LWR>;
        };
        combo_SCH {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <2 16>;
            bindings = <&kp O>;
            layers = <DEF>;
        };
        combo_ENG_SCH {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <2 16>;
            bindings = <&kp W>;
            layers = <LWR>;
        };
        combo_TVZ {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <15 5>;
            bindings = <&kp RBKT>;
            layers = <DEF>;
        };
        combo_ENG_TVZ {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <15 5>;
            bindings = <&kp SQT>;
            layers = <LWR>;
        };
        combo_MZ {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <15 4>;
            bindings = <&kp M>;
            layers = <DEF>;
        };
        combo_ENG_MZ {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <15 4>;
            bindings = <&kp SQT>;
            layers = <LWR>;
        };
        combo_LT {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <2 15>;
            bindings = <&macro_LT>;
            layers = <DEF>;
        };
        combo_GT {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <3 16>;
            bindings = <&macro_GT>;
            layers = <DEF>;
        };
        combo_LBKT {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <5 18>;
            bindings = <&macro_LBKT>;
            layers = <DEF>;
        };
        combo_RBKT {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <6 19>;
            bindings = <&macro_RBKT>;
            layers = <DEF>;
        };
        combo_AMPS {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <4 17>;
            bindings = <&macro_AMPS>;
            layers = <DEF>;
        };
        combo_AT {
            timeout-ms = <MY_COMBO_TIME>;
            key-positions = <17 29>;
            bindings = <&macro_AT>;
            layers = <DEF>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |         |  ; :          |   7      |   8   |    9    |   0     |               |     |     |     |     |     |      |     |
//        | LALT    |  .,           |  4 $     |   5   |   6 ^   |   +=    |               |     |     |     |     |     |      |
//        | LCTL    |  /\           |   1      |   2   |   3 #   |   -_    |               |     |     |     |     |     |      |
//                                                     |   SPC   |LSHFT    | RSE   | |     |     |     |
                        bindings = <
   &kp ESC &none     &ru_semi_colon  &kp N7     &kp N8  &kp N9    &kp N0                    &none &none &none &none &none &none  &none
           &kp LALT  &kp SLASH       &ru_dollar &kp N5  &ru_caret &kp EQUAL                 &none &none &none &none &none &none
           &kp LCTRL &ru_slash       &kp N1     &kp N2  &ru_hash  &kp MINUS                 &none &none &none &none &none &none
                                                        &kp SPACE &kp LSHFT &mo RSE   &none &none &none
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |         |  ; :          |  7 ?     |   8    |    9    |   0     |               |     |     |     |     |     |      |     |
//        | LALT    |  .,           |   4      |   5    |    6    |   =+    |               |     |     |     |     |     |      |
//        | LCTL    |  /\           |   1      |  2 "   |    3    |   -_    |               |     |     |     |     |     |      |
//                                                      |   SPC   |LSHFT    | RSE   | |     |     |     |
                        bindings = <
   &kp ESC &none     &kp SEMI        &eng_qmark &kp N8   &kp N9    &kp N0                    &none &none &none &none &none &none  &none
           &kp LALT  &eng_dot_comma  &kp N4     &kp N5   &kp N6    &kp EQUAL                 &none &none &none &none &none &none
           &kp LCTRL &eng_slash      &kp N1     &eng_dqt &kp N3    &kp MINUS                 &none &none &none &none &none &none
                                                         &kp SPACE &kp LSHFT &mo RSE   &none &none &none
                         >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |      | F12     | PrntScr | <-         | ctl home   | ->         | ENTER   |               |     |     |     |     |     |      |     |
//        | LALT    | ctl-a   | ctl {      | ctl end    | ctl }      |  TAB    |               |     |     |     |     |     |      |
//        | LCTL    | ctl-z   | ctl-x      | ctl-c      | ctl-v      |  DEL    |               |     |     |     |     |     |      |
//                                                      | BKSPS      |LSHFT    |       | |     |     |     |
                        bindings = <
   &kp LC(MINUS) &kp F12   &kp PSCRN &kp LEFT     &kp LC(HOME) &kp RIGHT    &kp ENTER                   &none &none &none &none &none &none  &none
                 &trans    &kp LC(A) &kp LC(LBKT) &kp LC(END)  &kp LC(RBKT) &kp TAB                     &none &none &none &none &none &none
                 &trans    &kp LC(Z) &kp LC(X)    &kp LC(C)    &kp LC(V)    &kp DEL                     &none &none &none &none &none &none
                                                               &kp BSPC     &trans      &none     &none &none &none
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
   &reset &bootloader  &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &bootloader &reset
          &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
          &none        &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &none
                                                                    &trans &none &trans   &trans &none &trans
                        >;
                };
        };
};
