/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    combos {
        compatible = "zmk,combos";
        combo_A {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp F>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |         |         |   7   |   8   |    9    |   0     |               |     |     |     |     |     |      |     |
//        | LALT    |  .,     |   4   |   5   |    6    |   =+    |               |     |     |     |     |     |      |
//        | LCTL    |         |   1   |   2   |    3    |   -_    |               |     |     |     |     |     |      |
//                                            |   SPC   |LSHFT    | LWR   | |     |     |     |
                        bindings = <
   &kp ESC &none     &none     &kp N7  &kp N8  &kp N9    &kp N0                    &none &none &none &none &none &none  &none
           &kp LALT  &kp SLASH &kp N4  &kp N5  &kp N6    &kp EQUAL                 &none &none &none &none &none &none
           &kp LCTRL &none     &kp N1  &kp N2  &kp N3    &kp MINUS                 &none &none &none &none &none &none
                                               &kp SPACE &kp LSHFT &mo LWR   &none &none &none
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |      |         |         |            | ctl home   |            | ENTER   |               |     |     |     |     |     |      |     |
//        | LALT    |         | ctl {      | ctl end    | ctl }      |  TAB    |               |     |     |     |     |     |      |
//        | LCTL    | ctl-z   | ctl-x      | ctl-c      | ctl-v      |  DEL    |               |     |     |     |     |     |      |
//                                                      |            |LSHFT    |       | |     |     |     |
                        bindings = <
   &none   &none     &none     &none        &kp LC(HOME) &none        &kp ENTER             &none &none &none &none &none &none  &none
           &trans    &none     &kp LC(LBKT) &kp LC(END)  &kp LC(RBKT) &kp TAB               &none &none &none &none &none &none
           &trans    &kp LC(Z) &kp LC(X)    &kp LC(C)    &kp LC(V)    &kp DEL               &none &none &none &none &none &none
                                                         &none        &trans    &none     &none &none &none
                         >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
//       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
//       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
//                          |     |     | ADJ |   | ADJ |     |     |
                        bindings = <
   &trans &kp KP_NUM      &kp KP_SLASH    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS        &kp C_VOL_UP &kp HOME &kp PSCRN &kp PG_UP &kp SLCK &kp CAPS &trans
          &mt LCTRL EQUAL &kp KP_MULTIPLY &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS         &kp C_MUTE   &kp LEFT &kp UP    &kp RIGHT &kp INS  &mt RCTRL K_APP
          &trans          &kp KP_N0       &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_DOT          &kp C_VOL_DN &kp END  &kp DOWN  &kp PG_DN &kp PAUSE_BREAK &trans
                                                           &trans &trans &lt ADJ RET   &lt ADJ ESC &trans &trans
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
   &reset &bootloader  &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &bootloader &reset
          &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
          &none        &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &none
                                                                    &trans &none &trans   &trans &none &trans
                        >;
                };
        };
};
