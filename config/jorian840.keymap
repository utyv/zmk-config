/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    macros {
        macro_stick: macro_stick {
            label = "macro_stick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time 1>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                , <&macro_tap &kp LS(NON_US_BSLH)>
                , <&macro_press &kp LALT &kp LSHFT>
                , <&macro_release &kp LALT &kp LSHFT>
                ;
        };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_A {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp F>;
        };
        combo_E {
            timeout-ms = <50>;
            key-positions = <16 18>;
            bindings = <&kp T>;
        };
        combo_I {
            timeout-ms = <50>;
            key-positions = <15 18>;
            bindings = <&kp B>;
        };
        combo_O {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp J>;
        };
        combo_Y {
            timeout-ms = <50>;
            key-positions = <15 17>;
            bindings = <&kp S>;
        };
        combo_U {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp E>;
        };
        combo_EE {
            timeout-ms = <50>;
            key-positions = <17 19>;
            bindings = <&kp SQT>;
        };
        combo_YU {
            timeout-ms = <50>;
            key-positions = <16 19>;
            bindings = <&kp DOT>;
        };
        combo_YA {
            timeout-ms = <50>;
            key-positions = <15 19>;
            bindings = <&kp Z>;
        };
        combo_YO {
            timeout-ms = <50>;
            key-positions = <16 17 18>;
            bindings = <&kp GRAVE>;
        };
        combo_P {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp G>;
        };
        combo_B {
            timeout-ms = <50>;
            key-positions = <29 30>;
            bindings = <&kp COMMA>;
        };
        combo_F {
            timeout-ms = <50>;
            key-positions = <3 5>;
            bindings = <&kp A>;
        };
        combo_V {
            timeout-ms = <50>;
            key-positions = <28 30>;
            bindings = <&kp D>;
        };
        combo_K {
            timeout-ms = <50>;
            key-positions = <2 5>;
            bindings = <&kp R>;
        };
        combo_G {
            timeout-ms = <50>;
            key-positions = <27 30>;
            bindings = <&kp U>;
        };
        combo_T {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp N>;
        };
        combo_D {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp L>;
        };
        combo_SH {
            timeout-ms = <50>;
            key-positions = <2 4>;
            bindings = <&kp I>;
        };
        combo_ZH {
            timeout-ms = <50>;
            key-positions = <27 29>;
            bindings = <&kp SEMI>;
        };
        combo_S {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp C>;
        };
        combo_Z {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp P>;
        };
        combo_YI {
            timeout-ms = <50>;
            key-positions = <4 18>;
            bindings = <&kp Q>;
        };
        combo_L {
            timeout-ms = <50>;
            key-positions = <3 18>;
            bindings = <&kp K>;
        };
        combo_M {
            timeout-ms = <50>;
            key-positions = <2 18>;
            bindings = <&kp V>;
        };
        combo_N {
            timeout-ms = <50>;
            key-positions = <17 5>;
            bindings = <&kp Y>;
        };
        combo_R {
            timeout-ms = <50>;
            key-positions = <3 17>;
            bindings = <&kp H>;
        };
        combo_H {
            timeout-ms = <50>;
            key-positions = <2 17>;
            bindings = <&kp LBKT>;
        };
        combo_C {
            timeout-ms = <50>;
            key-positions = <16 5>;
            bindings = <&kp W>;
        };
        combo_CH {
            timeout-ms = <50>;
            key-positions = <16 4>;
            bindings = <&kp X>;
        };
        combo_SCH {
            timeout-ms = <50>;
            key-positions = <2 16>;
            bindings = <&kp O>;
        };
        combo_TVZ {
            timeout-ms = <50>;
            key-positions = <15 5>;
            bindings = <&kp RBKT>;
        };
        combo_MZ {
            timeout-ms = <50>;
            key-positions = <15 4>;
            bindings = <&kp M>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |         |  \/           |   7   |   8   |    9    |   0     |               |     |     |     |     |     |      |     |
//        | LALT    |  .,           |   4   |   5   |    6    |   =+    |               |     |     |     |     |     |      |
//        | LCTL    |  |            |   1   |   2   |    3    |   -_    |               |     |     |     |     |     |      |
//                                                  |   SPC   |LSHFT    | LWR   | |     |     |     |
                        bindings = <
   &kp ESC &none     &kp NON_US_BSLH &kp N7  &kp N8  &kp N9    &kp N0                    &none &none &none &none &none &none  &none
           &kp LALT  &kp SLASH       &kp N4  &kp N5  &kp N6    &kp EQUAL                 &none &none &none &none &none &none
           &kp LCTRL &macro_stick    &kp N1  &kp N2  &kp N3    &kp MINUS                 &none &none &none &none &none &none
                                                     &kp SPACE &kp LSHFT &mo LWR   &none &none &none
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |      |         |         | <-         | ctl home   | ->         | ENTER   |               |     |     |     |     |     |      |     |
//        | LALT    |         | ctl {      | ctl end    | ctl }      |  TAB    |               |     |     |     |     |     |      |
//        | LCTL    | ctl-z   | ctl-x      | ctl-c      | ctl-v      |  DEL    |               |     |     |     |     |     |      |
//                                                      | BKSPS      |LSHFT    |       | |     |     |     |
                        bindings = <
   &none   &none     &none     &kp LEFT     &kp LC(HOME) &kp RIGHT    &kp ENTER             &none &none &none &none &none &none  &none
           &trans    &none     &kp LC(LBKT) &kp LC(END)  &kp LC(RBKT) &kp TAB               &none &none &none &none &none &none
           &trans    &kp LC(Z) &kp LC(X)    &kp LC(C)    &kp LC(V)    &kp DEL               &none &none &none &none &none &none
                                                         &kp BSPC     &trans    &none     &none &none &none
                         >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
//       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
//       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
//                          |     |     | ADJ |   | ADJ |     |     |
                        bindings = <
   &trans &kp KP_NUM      &kp KP_SLASH    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS        &kp C_VOL_UP &kp HOME &kp PSCRN &kp PG_UP &kp SLCK &kp CAPS &trans
          &mt LCTRL EQUAL &kp KP_MULTIPLY &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS         &kp C_MUTE   &kp LEFT &kp UP    &kp RIGHT &kp INS  &mt RCTRL K_APP
          &trans          &kp KP_N0       &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_DOT          &kp C_VOL_DN &kp END  &kp DOWN  &kp PG_DN &kp PAUSE_BREAK &trans
                                                           &trans &trans &lt ADJ RET   &lt ADJ ESC &trans &trans
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
   &reset &bootloader  &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &bootloader &reset
          &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
          &none        &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &none
                                                                    &trans &none &trans   &trans &none &trans
                        >;
                };
        };
};
